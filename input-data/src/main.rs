// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use input_data::prove_data_parsing;
use input_data_methods::HEART_DISEASE_DATA_ID;

use std::{error::Error, fs::write};

/// Given an secp256k1 verifier key (i.e. public key), message and signature,
/// runs the ECDSA verifier inside the zkVM and returns a receipt, including a
/// journal and seal attesting to the fact that the prover knows a valid
/// signature from the committed public key over the committed message.
fn main() -> Result<(), Box<dyn Error>> {
    
    let input_file_path = include_str!("../data/heart+disease/output/signed.cleveland.data.csv");
    let output_file_path = "out/proof_of_deserialization";

    let proof = prove_data_parsing(input_file_path)?;
    let receipt = proof.receipt;
    
    // Verify the receipt and then access the journal.
    receipt.verify(HEART_DISEASE_DATA_ID).expect("Verification failed");
    
    // Save the receipt to disk so it can be sent to the verifier.
    write(output_file_path, bincode::serialize(&receipt).unwrap())?;
    println!("Verification Successfully! Saved the receipt to {}", output_file_path);

    Ok(())
}
